/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csc640project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Alex
 */
public class UpdateMemberGUI extends javax.swing.JFrame {
private final String connectionUrl = "jdbc:sqlserver://cscsql2.carrollu.edu;" +  
					   "databaseName=csc550_fall2015_akoltun;user=csc550_fall2015_akoltun;password=480772;";
private boolean dateChanged = false,statusChanged = false;
    /**
     * Creates new form UpdateMemberGUI
     */
    public UpdateMemberGUI() {
        initComponents();
        setUpDateMenu();
        setUpMemberMenu();
        setUpStatusMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        MemberIDLabel = new javax.swing.JLabel();
        MemberIDChoice = new java.awt.Choice();
        FirstNameLabel = new javax.swing.JLabel();
        FirstNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        LastNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        StreetField = new javax.swing.JTextField();
        CityField = new javax.swing.JTextField();
        CountryField = new javax.swing.JTextField();
        ZipCodeField = new javax.swing.JTextField();
        StatusChoice = new java.awt.Choice();
        UpdateButton = new javax.swing.JButton();
        StateLabel = new javax.swing.JLabel();
        StateField = new javax.swing.JTextField();
        YearChoice = new java.awt.Choice();
        MonthChoice = new java.awt.Choice();
        DayChoice = new java.awt.Choice();
        YearLabel = new javax.swing.JLabel();
        MonthLabel = new javax.swing.JLabel();
        DayLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPanel.setBackground(new java.awt.Color(166, 83, 0));

        MemberIDLabel.setText("MemberID");

        FirstNameLabel.setText("First Name");

        jLabel1.setText("Last Name");

        jLabel2.setText("Date of Birth");

        jLabel3.setText("Street");

        jLabel4.setText("City");

        jLabel5.setText("Country");

        jLabel6.setText("Zip Code");

        jLabel7.setText("Status");

        ZipCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZipCodeFieldActionPerformed(evt);
            }
        });

        StatusChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                StatusChoiceItemStateChanged(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        StateLabel.setText("State");

        YearChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                YearChoiceItemStateChanged(evt);
            }
        });

        MonthChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MonthChoiceItemStateChanged(evt);
            }
        });

        YearLabel.setText("Year");

        MonthLabel.setText("Month");

        DayLabel.setText("Day");

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(StateLabel)
                            .addComponent(jLabel2))
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(UpdateButton)
                                    .addComponent(CityField)
                                    .addComponent(CountryField)
                                    .addComponent(ZipCodeField)
                                    .addComponent(StatusChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StateField, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(StreetField, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(YearLabel)
                                    .addComponent(YearChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(MonthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MonthLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(DayChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FirstNameLabel)
                            .addComponent(jLabel1)
                            .addComponent(MemberIDLabel))
                        .addGap(38, 38, 38)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MemberIDChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(DayLabel)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(FirstNameTextField))))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MemberIDChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MemberIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstNameLabel)
                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YearLabel)
                    .addComponent(MonthLabel)
                    .addComponent(DayLabel))
                .addGap(1, 1, 1)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(DayChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(YearChoice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(StreetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(CityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StateLabel)
                            .addComponent(StateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(CountryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ZipCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addComponent(StatusChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(UpdateButton))
                            .addComponent(jLabel7)))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(MonthChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void ZipCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZipCodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZipCodeFieldActionPerformed
    //Update the first name
    private void UpdateFirstName(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set MemberFirstName = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, FirstNameTextField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    //Update the last name
    private void UpdateLastName(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set MemberLastName = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, LastNameTextField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    //Update the date of birth
    private void UpdateDOB(){
     try {
        Connection con = DriverManager.getConnection(connectionUrl);
        Statement statement = con.createStatement();
       String sql = "Update Member Set MemberDOB = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
        String dateString = YearChoice.getSelectedItem()+"-"+MonthChoice.getSelectedItem()+"-"+DayChoice.getSelectedItem();
       prest.setString(1, dateString);
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    
    //Update the street
    private void UpdateStreet(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set Street = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, StreetField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    
    //Update the last name
    private void UpdateCity(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set City = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, CityField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    
    private void UpdateState(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set State = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, StateField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    private void UpdateCountry(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set Country = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, CountryField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    
    private void UpdateZipCode(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set ZipCode = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setString(1, ZipCodeField.getText());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    private void UpdateStatus(){
     try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Member Set StatusID = ? Where MemberID = ?";
       PreparedStatement prest = con.prepareStatement(sql);
       prest.setInt(1, getStatusID());
       prest.setInt(2,Integer.parseInt(MemberIDChoice.getSelectedItem()));
       prest.executeUpdate();
       con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        
       if(!FirstNameTextField.getText().trim().equals(""))
       UpdateFirstName();
       if(!LastNameTextField.getText().trim().equals(""))
       UpdateLastName();
       if(dateChanged)
       UpdateDOB();
       if(!StreetField.getText().trim().equals(""))
       UpdateStreet();
       if(!CityField.getText().trim().equals(""))
       UpdateCity();
       if(!StateField.getText().trim().equals(""))
       UpdateState();
       if(!CountryField.getText().trim().equals(""))
       UpdateCountry();
       if(!ZipCodeField.getText().trim().equals(""))
       UpdateZipCode();
       if(statusChanged)
       UpdateStatus();
       this.setVisible(false);
			
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void MonthChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MonthChoiceItemStateChanged
        // TODO add your handling code here:
        dateChanged = true;
        DayChoice.removeAll();
        int currentMonth = Integer.parseInt(MonthChoice.getSelectedItem());
        int currentYear = Integer.parseInt(YearChoice.getSelectedItem());
        int maxDay = 0;
        if(currentMonth==2&&currentYear%4==0)
            maxDay=29;
        else if(currentMonth==2&&currentYear%4!=0)
            maxDay=28;
        else if(currentMonth==4||currentMonth==6||currentMonth==9||currentMonth==11)
            maxDay=30;
        else
            maxDay=31;
        
        for(int day=1;day<=maxDay;day++)
            DayChoice.add(""+day);
    }//GEN-LAST:event_MonthChoiceItemStateChanged

    private void YearChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_YearChoiceItemStateChanged
        // TODO add your handling code here:
       dateChanged = true;
        DayChoice.removeAll();
        int currentMonth = Integer.parseInt(MonthChoice.getSelectedItem());
        int currentYear = Integer.parseInt(YearChoice.getSelectedItem());
        int maxDay = 0;
        if(currentMonth==2&&currentYear%4==0)
            maxDay=29;
        else if(currentMonth==2&&currentYear%4!=0)
            maxDay=28;
        else if(currentMonth==4||currentMonth==6||currentMonth==9||currentMonth==11)
            maxDay=30;
        else
            maxDay=31;
        
        for(int day=1;day<=maxDay;day++)
            DayChoice.add(""+day);
    }//GEN-LAST:event_YearChoiceItemStateChanged

    private void StatusChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_StatusChoiceItemStateChanged
        // TODO add your handling code here:
        statusChanged = true;
    }//GEN-LAST:event_StatusChoiceItemStateChanged
private void setUpDateMenu(){
        //Set up the years
        for(int year=1900;year<=2010;year++){
            YearChoice.add(""+year);
        }
        //Set up the months
        for(int month=1;month<=12;month++){
            MonthChoice.add(""+month);
        }
   
        for(int day=1;day<=31;day++)
            DayChoice.add(""+day);
    }
    
    private void setUpMemberMenu(){
        
        try {
        
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String query = "SELECT * FROM Member";
       ResultSet resultSet = statement.executeQuery(query);
	while(resultSet.next()){
	MemberIDChoice.add(resultSet.getString("MemberID"));
	 }
	con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    }
    
     private int getStatusID(){
        
        try {
        
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String query = "SELECT * FROM Status Where StatusDesc = ?";
       PreparedStatement prest = con.prepareStatement(query);
       prest.setString(1,StatusChoice.getSelectedItem());
       ResultSet resultSet = prest.executeQuery();
       
	while(resultSet.next()){
	return resultSet.getInt("StatusID");
	 }
	con.close();
			
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
      return -1;
    }
    private void setUpStatusMenu(){
        StatusChoice.add("Active");
        StatusChoice.add("Suspended");
        StatusChoice.add("In Active");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateMemberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateMemberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateMemberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateMemberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateMemberGUI().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CityField;
    private javax.swing.JTextField CountryField;
    private java.awt.Choice DayChoice;
    private javax.swing.JLabel DayLabel;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JPanel MainPanel;
    private java.awt.Choice MemberIDChoice;
    private javax.swing.JLabel MemberIDLabel;
    private java.awt.Choice MonthChoice;
    private javax.swing.JLabel MonthLabel;
    private javax.swing.JTextField StateField;
    private javax.swing.JLabel StateLabel;
    private java.awt.Choice StatusChoice;
    private javax.swing.JTextField StreetField;
    private javax.swing.JButton UpdateButton;
    private java.awt.Choice YearChoice;
    private javax.swing.JLabel YearLabel;
    private javax.swing.JTextField ZipCodeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
