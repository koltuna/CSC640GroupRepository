/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
<<<<<<< HEAD
package csc640project;
<<<<<<< HEAD
=======
package chocanproject;
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f

=======
　
>>>>>>> origin/alex_code
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
<<<<<<< HEAD
import javax.swing.JOptionPane;
<<<<<<< HEAD
=======
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f

=======
　
>>>>>>> origin/alex_code
/**
 *
 * @author Alex
 */
public class UpdateProviderGUI extends javax.swing.JFrame {
<<<<<<< HEAD
    private final String connectionUrl = "jdbc:sqlserver://cscsql2.carrollu.edu;" +  
					   "databaseName=csc550_fall2015_akoltun;user=csc550_fall2015_akoltun;password=480772;";
     private boolean statusChanged = false;
<<<<<<< HEAD
=======
    private final String connectionUrl = "jdbc:sqlserver://PRADEEP-PC\\PRADEEP-PC\\PJ:60665;databaseName=ChocAn;user=ChocAnUser;password=pass1234;";
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f

=======
　
>>>>>>> origin/alex_code
    /**
     * Creates new form UpdateProviderGUI
     */
    public UpdateProviderGUI() {
        initComponents();
        setUpProviderMenu();
        setUpStatusMenu();
    }
　
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
<<<<<<< HEAD
<<<<<<< HEAD
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
=======
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
=======
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
>>>>>>> origin/alex_code
    private void initComponents() {
　
        MainPanel = new javax.swing.JPanel();
        ProviderIDChoice = new java.awt.Choice();
        ProviderIDLabel = new javax.swing.JLabel();
<<<<<<< HEAD
        FirstNameLabel = new javax.swing.JLabel();
        LastNameLabel = new javax.swing.JLabel();
=======
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
        FirstNameTextField = new javax.swing.JTextField();
        LastNameTextField = new javax.swing.JTextField();
        StreetField = new javax.swing.JTextField();
        StreetLabel = new javax.swing.JLabel();
        CityLabel = new javax.swing.JLabel();
        CityField = new javax.swing.JTextField();
        ZipCodeLabel = new javax.swing.JLabel();
        StateLabel = new javax.swing.JLabel();
        StateField = new javax.swing.JTextField();
        ZipCodeField = new javax.swing.JTextField();
<<<<<<< HEAD
        SpecializationLabel = new javax.swing.JLabel();
        SpecializationField = new javax.swing.JTextField();
        StatusLabel = new javax.swing.JLabel();
=======
        jLabel3 = new javax.swing.JLabel();
        SpecializationField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
        StatusChoice = new java.awt.Choice();
        UpdateButton = new javax.swing.JButton();
　
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
　
        MainPanel.setBackground(new java.awt.Color(166, 83, 0));
　
        ProviderIDLabel.setText("ProviderID");
<<<<<<< HEAD

<<<<<<< HEAD
=======
　
>>>>>>> origin/alex_code
        FirstNameLabel.setText("First Name");
　
        LastNameLabel.setText("Last Name");
<<<<<<< HEAD
=======
        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f

=======
　
>>>>>>> origin/alex_code
        StreetLabel.setText("Street");
　
        CityLabel.setText("City");
　
        ZipCodeLabel.setText("Zip Code");
　
        StateLabel.setText("State");
<<<<<<< HEAD

<<<<<<< HEAD
=======
　
>>>>>>> origin/alex_code
        SpecializationLabel.setText("Specialization");
　
        StatusLabel.setText("Status");
　
        StatusChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                StatusChoiceItemStateChanged(evt);
            }
        });
<<<<<<< HEAD
=======
        jLabel3.setText("Specialization");

        jLabel4.setText("Status");
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f

=======
　
>>>>>>> origin/alex_code
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
　
        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(UpdateButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(ProviderIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(ProviderIDChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MainPanelLayout.createSequentialGroup()
<<<<<<< HEAD
                                .addComponent(FirstNameLabel)
=======
                                .addComponent(jLabel1)
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MainPanelLayout.createSequentialGroup()
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
<<<<<<< HEAD
                                    .addComponent(LastNameLabel)
=======
                                    .addComponent(jLabel2)
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
                                    .addComponent(StreetLabel)
                                    .addComponent(CityLabel)
                                    .addComponent(StateLabel)
                                    .addComponent(ZipCodeLabel)
<<<<<<< HEAD
                                    .addComponent(SpecializationLabel)
                                    .addComponent(StatusLabel))
=======
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(StreetField)
                                    .addComponent(LastNameTextField)
                                    .addComponent(CityField)
                                    .addComponent(StateField)
                                    .addComponent(ZipCodeField)
                                    .addComponent(SpecializationField, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(StatusChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(46, 46, 46))))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProviderIDLabel)
                    .addComponent(ProviderIDChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
<<<<<<< HEAD
                    .addComponent(FirstNameLabel)
                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastNameLabel)
=======
                    .addComponent(jLabel1)
                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
                    .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StreetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreetLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CityLabel)
                    .addComponent(CityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StateLabel)
                    .addComponent(StateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ZipCodeLabel))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ZipCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
<<<<<<< HEAD
                    .addComponent(SpecializationLabel)
=======
                    .addComponent(jLabel3)
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
                    .addComponent(SpecializationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StatusChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
<<<<<<< HEAD
                    .addComponent(StatusLabel))
=======
                    .addComponent(jLabel4))
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
                .addGap(18, 18, 18)
                .addComponent(UpdateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
　
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
　
        pack();
<<<<<<< HEAD
<<<<<<< HEAD
    }// </editor-fold>                        

=======
    }// </editor-fold>//GEN-END:initComponents
　
>>>>>>> origin/alex_code
    //Update the first name
     private void UpdateFirstName() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set ProviderFirstName = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, FirstNameTextField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     //Update the last name
     private void UpdateLastName() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set ProviderLastName = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, LastNameTextField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     
     //Update the street in the system 
     private void UpdateStreet() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set ProviderStreet = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, StreetField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     //Update the city
     private void UpdateCity() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set ProviderCity = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, CityField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     
     //Update the state
     private void UpdateState() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set ProviderState = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, StateField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     
     //Update the zip code
     private void UpdateZipCode() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set ProviderZipCode = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, ZipCodeField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     
     //Update the specialization
     private void UpdateSpecialization() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set Specialization = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, SpecializationField.getText());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     
     //Update the status
     private void UpdateStatus() {                                             
        // TODO add your handling code here:
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
       String sql = "Update Provider Set StatusID = ? Where ProviderID = ?";
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setInt(1, getStatusID());
       prest.setInt(2,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
    } catch (SQLException ex) {
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
     //Found code at https://coderanch.com/t/405258/java/String-IsNumeric
      private boolean isNumeric(String s){
          try{
              Integer.parseInt(s);
          }
          catch(NumberFormatException e){
              return false;
          }
          
          return true;
      }
    
     
    //Does length validation for all the fields
    private boolean lengthValidation(){
        if(FirstNameTextField.getText().length()+LastNameTextField.getText().length()>25){
            JOptionPane.showMessageDialog(null, "Member name is too long");
            return false;
        }
        if(StreetField.getText().length()>25){
            JOptionPane.showMessageDialog(null, "Street name is too long");
            return false;
        }
        if(CityField.getText().length()>14){
            JOptionPane.showMessageDialog(null, "City name is too long");
            return false;
        }
        if(StateField.getText().length()>2){
            JOptionPane.showMessageDialog(null, "State Abbreviation is too long");
            return false;
        }
        if(ZipCodeField.getText().length()>5){
            JOptionPane.showMessageDialog(null, "Zip Code is too long");
            return false;
        }
        
         if(!isNumeric(ZipCodeField.getText())&&!ZipCodeField.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Zip Code needs to be numeric");
            return false;
        }
        return true;
    }
     //Execution of update button
    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
       //Length validation 
          if(!lengthValidation())
              return;
        //Update where fields are filled
         if(!FirstNameTextField.getText().trim().equals(""))
       UpdateFirstName();
       if(!LastNameTextField.getText().trim().equals(""))
       UpdateLastName();
       if(!StreetField.getText().trim().equals(""))
       UpdateStreet();
       if(!CityField.getText().trim().equals(""))
       UpdateCity();
       if(!StateField.getText().trim().equals(""))
       UpdateState();
       if(!ZipCodeField.getText().trim().equals(""))
       UpdateZipCode();
      if(!SpecializationField.getText().trim().equals(""))
       UpdateSpecialization();
      if(statusChanged)
        UpdateStatus();
      //Close and hide the window
	this.setVisible(false);
    
    }//GEN-LAST:event_UpdateButtonActionPerformed
          //Indicated the status button has changed
    private void StatusChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_StatusChoiceItemStateChanged
        // TODO add your handling code here:
        statusChanged = true;
    }//GEN-LAST:event_StatusChoiceItemStateChanged
　
    //Locate the corresponding status id
    private int getStatusID(){
        //Search the Status table
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
=======
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try {
    
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
       String sql = "Update Provider Set ProviderFirstName = ?, ProviderLastName = ?, ProviderStreet = ?, ProviderCity = ?, ProviderState = ?, ProviderZipCode = ?, Specialization = ?, StatusID = ? Where ProviderID = ?";
       System.out.println(sql);
       PreparedStatement prest = con.prepareStatement(sql);  
       prest.setString(1, FirstNameTextField.getText());
       prest.setString(2,LastNameTextField.getText());
       prest.setString(3,StreetField.getText());
       prest.setString(4,CityField.getText());
       prest.setString(5,StateField.getText());
       prest.setString(6,ZipCodeField.getText());
        prest.setString(7,SpecializationField.getText());
       prest.setInt(8,getStatusID());
       prest.setInt(9,Integer.parseInt(ProviderIDChoice.getSelectedItem())) ;
       prest.executeUpdate();
       con.close();
	this.setVisible(false);
    } catch (SQLException ex) {
        Logger.getLogger(ChocAnOperatorTerminal.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private int getStatusID(){
        
        try {
        
        Connection con = DriverManager.getConnection(connectionUrl);
        
        Statement statement = con.createStatement();
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
       String query = "SELECT * FROM Status Where StatusDesc = ?";
       PreparedStatement prest = con.prepareStatement(query);
       prest.setString(1,StatusChoice.getSelectedItem());
       ResultSet resultSet = prest.executeQuery();
<<<<<<< HEAD
=======
       
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
	while(resultSet.next()){
	return resultSet.getInt("StatusID");
	 }
	con.close();
			
    } catch (SQLException ex) {
<<<<<<< HEAD
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
      //If id cannot be found, return -1
      return -1;
    }
    //Setup the provider menu
     private void setUpProviderMenu(){
        //Get the list of Provider IDs and list them
        try {
        Connection con = DriverManager.getConnection(connectionUrl);
=======
        Logger.getLogger(ChocAnOperatorTerminal.class.getName()).log(Level.SEVERE, null, ex);
    }
      return -1;
    }
     private void setUpProviderMenu(){
        
        try {
        
        Connection con = DriverManager.getConnection(connectionUrl);
        
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
        Statement statement = con.createStatement();
       String query = "SELECT * FROM Provider";
       ResultSet resultSet = statement.executeQuery(query);
	while(resultSet.next()){
	ProviderIDChoice.add(resultSet.getString("ProviderID"));
	 }
	con.close();
			
    } catch (SQLException ex) {
<<<<<<< HEAD
        Logger.getLogger(MainGUIInterface.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    }
     //Add the different status states to the menu
=======
        Logger.getLogger(ChocAnOperatorTerminal.class.getName()).log(Level.SEVERE, null, ex);
    }
   
    }
     
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
      private void setUpStatusMenu(){
        StatusChoice.add("Active");
        StatusChoice.add("Suspended");
        StatusChoice.add("In Active");
    }
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateProviderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateProviderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateProviderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateProviderGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
<<<<<<< HEAD
<<<<<<< HEAD
=======
        //</editor-fold>
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f

=======
　
>>>>>>> origin/alex_code
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateProviderGUI().setVisible(true);
            }
        });
    }
<<<<<<< HEAD

<<<<<<< HEAD
    // Variables declaration - do not modify                     
=======
　
    // Variables declaration - do not modify//GEN-BEGIN:variables
>>>>>>> origin/alex_code
    private javax.swing.JTextField CityField;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JLabel LastNameLabel;
=======
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CityField;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JTextField FirstNameTextField;
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JPanel MainPanel;
    private java.awt.Choice ProviderIDChoice;
    private javax.swing.JLabel ProviderIDLabel;
    private javax.swing.JTextField SpecializationField;
<<<<<<< HEAD
    private javax.swing.JLabel SpecializationLabel;
    private javax.swing.JTextField StateField;
    private javax.swing.JLabel StateLabel;
    private java.awt.Choice StatusChoice;
    private javax.swing.JLabel StatusLabel;
=======
    private javax.swing.JTextField StateField;
    private javax.swing.JLabel StateLabel;
    private java.awt.Choice StatusChoice;
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
    private javax.swing.JTextField StreetField;
    private javax.swing.JLabel StreetLabel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTextField ZipCodeField;
    private javax.swing.JLabel ZipCodeLabel;
<<<<<<< HEAD
<<<<<<< HEAD
    // End of variables declaration                   
=======
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
>>>>>>> 62e1ffe9d592baa80b0e11b3c8c167534daf691f
=======
    // End of variables declaration//GEN-END:variables
>>>>>>> origin/alex_code
}
　
